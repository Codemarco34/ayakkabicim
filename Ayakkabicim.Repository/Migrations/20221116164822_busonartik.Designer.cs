// <auto-generated />
using System;
using Ayakkabicim.Repository.AppDbContexts.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ayakkabicim.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221116164822_busonartik")]
    partial class busonartik
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ayakkabicim.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sneakers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Klasik Ayakkabı"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Günlük Ayakkabı"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Erkek Çocuk Ayakkabı"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kız Çocuk Ayakkabı"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Topuklu Ayakkabı"
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductBrands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("BrandsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandsName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BrandsWebUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("LogoBase64Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoFileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandsName = "Adidas"
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductColors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ColorBase64Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ColorFileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ColorFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductColors");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductCurrencyUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductCurrencyUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Türk Lirası"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dolar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Euro"
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<int>("ProductBrandsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProductVatId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("WeightId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("ProductBrandsId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductProjectId");

                    b.HasIndex("ProductVatId");

                    b.HasIndex("WeightId");

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductMeasurementUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductMeasurementUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Numara"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Uzunluk/cm"
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductProjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SuperStep"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ayakkabı Dünyası"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Flo"
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ExplanationWebUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<int>("IsMixture")
                        .HasColumnType("int");

                    b.Property<string>("LogoBase64Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoFileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalWebUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "AS123",
                            CategoryId = 1,
                            Code = "123AS",
                            CreateDate = new DateTime(2022, 11, 16, 19, 48, 21, 965, DateTimeKind.Local).AddTicks(2625),
                            ExpirationDate = new DateTime(2022, 11, 16, 19, 48, 21, 965, DateTimeKind.Local).AddTicks(2613),
                            Explanation = "asdasdsad",
                            ExplanationWebUrl = "adsada",
                            IsMixture = 1,
                            LogoBase64Content = "asdsadas",
                            LogoFileName = "asdasdas",
                            LogoFilePath = "asdsadas",
                            Name = "Test Ürün1",
                            PurchasePrice = 10m,
                            SalePrice = 15m,
                            Stock = 10,
                            TechnicalWebUrl = "AS123",
                            UpdateDate = new DateTime(2022, 11, 16, 19, 48, 21, 965, DateTimeKind.Local).AddTicks(2628)
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductsWeightUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductWeightUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1,00"
                        },
                        new
                        {
                            Id = 2,
                            Name = "1,25"
                        },
                        new
                        {
                            Id = 3,
                            Name = "1,50"
                        },
                        new
                        {
                            Id = 4,
                            Name = "1,75"
                        },
                        new
                        {
                            Id = 5,
                            Name = "2,00"
                        },
                        new
                        {
                            Id = 6,
                            Name = "2,25"
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductVatUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActiveDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActiveDateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsDeleteDateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsDeleteDateUpdateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleteDateUserId")
                        .HasColumnType("int");

                    b.Property<string>("IsExemtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductVatUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "18"
                        });
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductFeatures", b =>
                {
                    b.HasOne("Ayakkabicim.Core.Models.ProductCurrencyUnits", "ProductCurrencyUnits")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Ayakkabicim.Core.Models.ProductMeasurementUnits", "ProductMeasurementUnits")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("MeasurementId");

                    b.HasOne("Ayakkabicim.Core.Models.ProductBrands", "ProductBrands")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductBrandsId");

                    b.HasOne("Ayakkabicim.Core.Models.ProductColors", "ProductColors")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductColorId");

                    b.HasOne("Ayakkabicim.Core.Models.Products", "Products")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductId");

                    b.HasOne("Ayakkabicim.Core.Models.ProductProjects", "ProductProjects")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductProjectId");

                    b.HasOne("Ayakkabicim.Core.Models.ProductVatUnits", "ProductVatUnits")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductVatId");

                    b.HasOne("Ayakkabicim.Core.Models.ProductsWeightUnits", "ProductWeightUnits")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("WeightId");

                    b.Navigation("ProductBrands");

                    b.Navigation("ProductColors");

                    b.Navigation("ProductCurrencyUnits");

                    b.Navigation("ProductMeasurementUnits");

                    b.Navigation("ProductProjects");

                    b.Navigation("ProductVatUnits");

                    b.Navigation("ProductWeightUnits");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.Products", b =>
                {
                    b.HasOne("Ayakkabicim.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductBrands", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductColors", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductCurrencyUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductMeasurementUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductProjects", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.Products", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductsWeightUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("Ayakkabicim.Core.Models.ProductVatUnits", b =>
                {
                    b.Navigation("ProductFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
